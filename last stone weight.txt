We have a collection of stones, each stone has a positive integer weight.

Each turn, we choose the two heaviest stones and smash them together.  Suppose the stones have weights x and y with x <= y.  The result of this smash is:

If x == y, both stones are totally destroyed;
If x != y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.
At the end, there is at most 1 stone left.  Return the weight of this stone (or 0 if there are no stones left.)


class Solution {
    public int lastStoneWeight(int[] stones) {
        PriorityQueue<Integer> q=new PriorityQueue<>(stones.length,Collections.reverseOrder());
        
        for(int i=0;i<stones.length;i++)
            q.add(stones[i]);
        
        int el1=0,el2=0;
        
        while(q.size()>1)
        {
            el1=q.remove();
            el2=q.remove();
            
            if(el1>=el2)
                el1=el1-el2;
            
            if(el1!=0)
                q.add(el1);
        }
        
        
        return q.size()==1?q.remove():0;
        
        
    }
}